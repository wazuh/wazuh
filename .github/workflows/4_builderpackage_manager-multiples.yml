name: Package - Build multiple Wazuh Manager Packages
on:
  workflow_dispatch:
    inputs:
      targets:
        description: 'Comma-separated targets. Example: "rpm-x86_64,deb-amd64".'
        type: string
        required: true
        default: 'rpm-x86_64,rpm-aarch64,deb-amd64,deb-arm64'
      revision:
        description: |
          Set the value to "1" for packages in release format.
          You can also add other values, such as issue numbers.
          By default, it is set to "0" for development.
        default: "0"
        type: string
        required: false
      is_stage:
          description: |
            Build package with release format.
            By default: false
          type: boolean
          required: false
      debug:
        description: |
          Build the binaries as debug (without optimizations).
          By default: false
        type: boolean
        required: false
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  select-targets:
    name: Select build targets (Wazuh Managers)
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.result }}
    steps:
      - name: Generate dynamic matrix
        id: set-matrix
        uses: actions/github-script@v7
        with:
          script: |
            const targets = '${{ inputs.targets || 'rpm-x86_64,rpm-aarch64,deb-amd64,deb-arm64' }}'.split(',');
            const matrix = targets.map(target => {
              const [system, architecture] = target.split('-');
              return { system, architecture };
            });
            core.info('Generated matrix: ' + JSON.stringify(matrix));
            return { include: matrix };
          result-encoding: json
  build-wazuh-manager:
    name: Build Wazuh Manager
    needs: select-targets
    strategy:
        matrix: ${{ fromJSON(needs.select-targets.outputs.matrix) }}
        fail-fast: false
    uses: ./.github/workflows/4_builderpackage_manager.yml
    with:
      docker_image_tag: auto  
      architecture:  ${{ matrix.architecture }}
      system:  ${{ matrix.system }}
      revision: ${{ inputs.revision || '0' }}
      is_stage: "${{ inputs.is_stage || false }}"
      debug: "${{ inputs.debug || false }}"
    secrets: inherit
