name: Integration tests for API

on:
  workflow_dispatch:
    inputs:
      package_reference:
        description: 'Package reference branch/commit. Current workflow reference if empty.'
        required: false
        type: string
      tiers:
        description: 'Tests tiers'
        required: false
        default: '0,1,2'
        type: string
  pull_request:
    paths:
      - ".github/workflows/5_testintegration_api.yml"
      - "apis/server_management/**"
      - "tests/integration/test_api/**"

jobs:
  test:
    env:
      PACKAGE_REFERENCE: ${{ inputs.package_reference || github.ref_name }}
      S3_BUCKET_PATH: s3://packages-dev.internal.wazuh.com/development/wazuh/5.x/main/packages
    runs-on: ubuntu-latest
    steps:
      # Check tests tiers input
      - name: Tests tiers validation
        run: |
          IFS=',' read -ra TIERS <<< "${{ github.event.inputs.tiers }}"
          for tier in "${TIERS[@]}"; do
            if [[ ! "$tier" =~ ^[012]$ ]]; then
              echo "Invalid tier: $tier"
              exit 1
            fi
          done
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "./.github/workflows/.python-version-it"
          architecture: x64

      # Wait for wazuh server package generation workflow
      - name: Wait for wazuh server package generation workflow
        if: github.event_name == 'pull_request'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          check-name: 'package-build (amd64, deb) / Build deb wazuh-server on amd64'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 60
          allowed-conclusions: success

      # Set wazuh server package name
      - run: |
          short_commit=$(git rev-parse --short=7 "$PACKAGE_REFERENCE")
          full_version=$(curl https://raw.githubusercontent.com/wazuh/wazuh/$PACKAGE_REFERENCE/src/VERSION)
          version=$(sed 's/^v\([0-9]*\.[0-9]*\.[0-9]*\)/\1/' $full_version)
          echo "PACKAGE_NAME=wazuh-server_${version}-0_amd64_${short_commit}.deb" >> $GITHUB_ENV

      # Fetch wazuh server package
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CI_INTERNAL_DEVELOPMENT_BUCKET_USER_SECRET_KEY }}
          aws-region: ${{ secrets.CI_AWS_REGION }}

      - name: Fetch wazuh-server package 
        run: |
          aws ${{ env.S3_BUCKET_PATH }}/${PACKAGE_NAME} ${GITHUB_WORKSPACE}/${PACKAGE_NAME}

      # Install wazuh server package
      - name: Install wazuh-server 
        run: sudo apt install ${GITHUB_WORKSPACE}/${PACKAGE_NAME}

      # Download and install integration tests framework.
      - name: Download and install integration tests framework
        run: |
          if [ "X`git ls-remote https://github.com/wazuh/qa-integration-framework.git ${{ github.ref_name }}`" != "X" ]; then
              QA_BRANCH=${{ github.ref_name }}
          elif [ "X`git ls-remote https://github.com/wazuh/qa-integration-framework.git ${{ github.base_ref }}`" != "X" ]; then
              QA_BRANCH=${{ github.base_ref }}
          else
              QA_BRANCH="main"
          fi
          git clone -b ${QA_BRANCH} --single-branch https://github.com/wazuh/qa-integration-framework.git
          python3 -m venv ${{ runner.temp }}/test-venv
          source ${{ runner.temp }}/test-venv/bin/activate
          pip install qa-integration-framework/
          rm -rf qa-integration-framework/

      # Run integration tests.
      - name: Run API tests
        run: |
          TIERS_PARAMETERS=""
          for tier in $(echo "${{ github.event.inputs.tiers }}" | tr ',' ' '); do
            TIERS_PARAMETERS="$TIERS_PARAMETERS --tier $tier"
          done
          cd tests/integration
          source ${{ runner.temp }}/test-venv/bin/activate
          sudo python -m pytest $TIERS_PARAMETERS test_api/
