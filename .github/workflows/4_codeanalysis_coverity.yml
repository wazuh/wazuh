name: 4.X - Coverity Scan

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      project: ${{ steps.vars.outputs.PROJECT }}
      jobs: ${{ steps.vars.outputs.JOBS }}
      version: ${{ steps.vars.outputs.VERSION }}
      description: ${{ steps.vars.outputs.DESCRIPTION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Set up project and build variables
        id: vars
        run: |
          if [[ "${{ github.event.inputs.project }}" == "wazuh" ]]; then
            echo "PROJECT=wazuh/wazuh" >> $GITHUB_OUTPUT
          else
            echo "PROJECT=wazuh/ossec-wazuh" >> $GITHUB_OUTPUT
          fi

          if [[ ${{ github.event.inputs.threads }} -le 0 ]]; then
            echo "JOBS=$(nproc)" >> $GITHUB_OUTPUT
          else
            echo "JOBS=${{ github.event.inputs.threads }}" >> $GITHUB_OUTPUT
          fi

          VERSION=$(jq -r '.version + "-" + .stage' VERSION.json)
          DESCRIPTION="Version $VERSION - Git ref ${{ github.ref_name }}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Download dependencies
        run: make -C src deps -j${{ needs.prepare.outputs.jobs }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Print variables
        run: |
          echo Description: ${{ needs.prepare.outputs.description }}

      - name: Build Coverity artifact
        uses: ./.github/actions/coverity/build
        with:
          command: make -C src TARGET=server COVERITY=YES -j${{ needs.prepare.outputs.jobs }}

      - name: List files
        run: ls -l cov-int/emit/*/emit-db*

      - name: Archive Coverity build
        run: tar czf wazuh.tgz cov-int

      - name: Upload Coverity artifact
        uses: actions/upload-artifact@v4
        with:
          name: wazuh.tgz
          path: wazuh.tgz

  upload:
    runs-on: ubuntu-latest
    needs: [prepare, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Download Coverity artifact
        uses: actions/download-artifact@v4
        with:
          name: wazuh.tgz

      - name: Upload to Coverity Scan
        uses: ./.github/actions/coverity/upload
        with:
          project: ${{ needs.prepare.outputs.project }}
          email: ${{ secrets.COVERITY_SCAN_NOTIFICATION_EMAIL }}
          token: ${{ github.event.inputs.project == 'wazuh' && secrets.COVERITY_SCAN_WAZUH_TOKEN || secrets.COVERITY_SCAN_OSSEC_TOKEN }}
          version: ${{ needs.prepare.outputs.version }}
          description: "${{ needs.prepare.outputs.description }}"
