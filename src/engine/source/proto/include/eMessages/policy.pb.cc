// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: policy.proto

#include "policy.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace com {
namespace wazuh {
namespace api {
namespace engine {
namespace policy {
PROTOBUF_CONSTEXPR StorePost_Request::StorePost_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct StorePost_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorePost_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorePost_RequestDefaultTypeInternal() {}
  union {
    StorePost_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorePost_RequestDefaultTypeInternal _StorePost_Request_default_instance_;
PROTOBUF_CONSTEXPR StoreDelete_Request::StoreDelete_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct StoreDelete_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreDelete_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreDelete_RequestDefaultTypeInternal() {}
  union {
    StoreDelete_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreDelete_RequestDefaultTypeInternal _StoreDelete_Request_default_instance_;
PROTOBUF_CONSTEXPR StoreGet_Request::StoreGet_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.namespaces_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct StoreGet_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreGet_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreGet_RequestDefaultTypeInternal() {}
  union {
    StoreGet_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreGet_RequestDefaultTypeInternal _StoreGet_Request_default_instance_;
PROTOBUF_CONSTEXPR StoreGet_Response::StoreGet_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct StoreGet_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreGet_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreGet_ResponseDefaultTypeInternal() {}
  union {
    StoreGet_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreGet_ResponseDefaultTypeInternal _StoreGet_Response_default_instance_;
PROTOBUF_CONSTEXPR AssetPost_Request::AssetPost_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.asset_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.namespace__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct AssetPost_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetPost_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetPost_RequestDefaultTypeInternal() {}
  union {
    AssetPost_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetPost_RequestDefaultTypeInternal _AssetPost_Request_default_instance_;
PROTOBUF_CONSTEXPR AssetPost_Response::AssetPost_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.warning_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct AssetPost_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetPost_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetPost_ResponseDefaultTypeInternal() {}
  union {
    AssetPost_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetPost_ResponseDefaultTypeInternal _AssetPost_Response_default_instance_;
PROTOBUF_CONSTEXPR AssetDelete_Request::AssetDelete_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.asset_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.namespace__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct AssetDelete_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetDelete_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetDelete_RequestDefaultTypeInternal() {}
  union {
    AssetDelete_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetDelete_RequestDefaultTypeInternal _AssetDelete_Request_default_instance_;
PROTOBUF_CONSTEXPR AssetDelete_Response::AssetDelete_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.warning_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct AssetDelete_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetDelete_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetDelete_ResponseDefaultTypeInternal() {}
  union {
    AssetDelete_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetDelete_ResponseDefaultTypeInternal _AssetDelete_Response_default_instance_;
PROTOBUF_CONSTEXPR AssetGet_Request::AssetGet_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.namespace__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct AssetGet_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetGet_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetGet_RequestDefaultTypeInternal() {}
  union {
    AssetGet_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetGet_RequestDefaultTypeInternal _AssetGet_Request_default_instance_;
PROTOBUF_CONSTEXPR AssetGet_Response::AssetGet_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct AssetGet_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetGet_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetGet_ResponseDefaultTypeInternal() {}
  union {
    AssetGet_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetGet_ResponseDefaultTypeInternal _AssetGet_Response_default_instance_;
PROTOBUF_CONSTEXPR AssetCleanDeleted_Request::AssetCleanDeleted_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct AssetCleanDeleted_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetCleanDeleted_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetCleanDeleted_RequestDefaultTypeInternal() {}
  union {
    AssetCleanDeleted_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetCleanDeleted_RequestDefaultTypeInternal _AssetCleanDeleted_Request_default_instance_;
PROTOBUF_CONSTEXPR AssetCleanDeleted_Response::AssetCleanDeleted_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct AssetCleanDeleted_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetCleanDeleted_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetCleanDeleted_ResponseDefaultTypeInternal() {}
  union {
    AssetCleanDeleted_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetCleanDeleted_ResponseDefaultTypeInternal _AssetCleanDeleted_Response_default_instance_;
PROTOBUF_CONSTEXPR DefaultParentGet_Request::DefaultParentGet_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.namespace__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct DefaultParentGet_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefaultParentGet_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefaultParentGet_RequestDefaultTypeInternal() {}
  union {
    DefaultParentGet_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefaultParentGet_RequestDefaultTypeInternal _DefaultParentGet_Request_default_instance_;
PROTOBUF_CONSTEXPR DefaultParentGet_Response::DefaultParentGet_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct DefaultParentGet_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefaultParentGet_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefaultParentGet_ResponseDefaultTypeInternal() {}
  union {
    DefaultParentGet_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefaultParentGet_ResponseDefaultTypeInternal _DefaultParentGet_Response_default_instance_;
PROTOBUF_CONSTEXPR DefaultParentPost_Request::DefaultParentPost_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.namespace__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct DefaultParentPost_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefaultParentPost_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefaultParentPost_RequestDefaultTypeInternal() {}
  union {
    DefaultParentPost_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefaultParentPost_RequestDefaultTypeInternal _DefaultParentPost_Request_default_instance_;
PROTOBUF_CONSTEXPR DefaultParentPost_Response::DefaultParentPost_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.warning_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct DefaultParentPost_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefaultParentPost_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefaultParentPost_ResponseDefaultTypeInternal() {}
  union {
    DefaultParentPost_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefaultParentPost_ResponseDefaultTypeInternal _DefaultParentPost_Response_default_instance_;
PROTOBUF_CONSTEXPR DefaultParentDelete_Request::DefaultParentDelete_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.namespace__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct DefaultParentDelete_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefaultParentDelete_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefaultParentDelete_RequestDefaultTypeInternal() {}
  union {
    DefaultParentDelete_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefaultParentDelete_RequestDefaultTypeInternal _DefaultParentDelete_Request_default_instance_;
PROTOBUF_CONSTEXPR DefaultParentDelete_Response::DefaultParentDelete_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.warning_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct DefaultParentDelete_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefaultParentDelete_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefaultParentDelete_ResponseDefaultTypeInternal() {}
  union {
    DefaultParentDelete_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefaultParentDelete_ResponseDefaultTypeInternal _DefaultParentDelete_Response_default_instance_;
PROTOBUF_CONSTEXPR PoliciesGet_Request::PoliciesGet_Request(
    ::_pbi::ConstantInitialized) {}
struct PoliciesGet_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PoliciesGet_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PoliciesGet_RequestDefaultTypeInternal() {}
  union {
    PoliciesGet_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PoliciesGet_RequestDefaultTypeInternal _PoliciesGet_Request_default_instance_;
PROTOBUF_CONSTEXPR PoliciesGet_Response::PoliciesGet_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct PoliciesGet_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PoliciesGet_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PoliciesGet_ResponseDefaultTypeInternal() {}
  union {
    PoliciesGet_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PoliciesGet_ResponseDefaultTypeInternal _PoliciesGet_Response_default_instance_;
PROTOBUF_CONSTEXPR NamespacesGet_Request::NamespacesGet_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct NamespacesGet_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamespacesGet_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamespacesGet_RequestDefaultTypeInternal() {}
  union {
    NamespacesGet_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamespacesGet_RequestDefaultTypeInternal _NamespacesGet_Request_default_instance_;
PROTOBUF_CONSTEXPR NamespacesGet_Response::NamespacesGet_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct NamespacesGet_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamespacesGet_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamespacesGet_ResponseDefaultTypeInternal() {}
  union {
    NamespacesGet_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamespacesGet_ResponseDefaultTypeInternal _NamespacesGet_Response_default_instance_;
}  // namespace policy
}  // namespace engine
}  // namespace api
}  // namespace wazuh
}  // namespace com
static ::_pb::Metadata file_level_metadata_policy_2eproto[22];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_policy_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_policy_2eproto = nullptr;

const uint32_t TableStruct_policy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StorePost_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StorePost_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StorePost_Request, _impl_.policy_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreDelete_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreDelete_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreDelete_Request, _impl_.policy_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Request, _impl_.namespaces_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::StoreGet_Response, _impl_.data_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Request, _impl_.asset_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Request, _impl_.namespace__),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetPost_Response, _impl_.warning_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Request, _impl_.asset_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Request, _impl_.namespace__),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetDelete_Response, _impl_.warning_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Request, _impl_.namespace__),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetGet_Response, _impl_.data_),
  ~0u,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Request, _impl_.policy_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::AssetCleanDeleted_Response, _impl_.data_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Request, _impl_.namespace__),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentGet_Response, _impl_.data_),
  ~0u,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Request, _impl_.namespace__),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Request, _impl_.parent_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentPost_Response, _impl_.warning_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Request, _impl_.namespace__),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Request, _impl_.parent_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::DefaultParentDelete_Response, _impl_.warning_),
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::PoliciesGet_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::PoliciesGet_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::PoliciesGet_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::PoliciesGet_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::PoliciesGet_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::PoliciesGet_Response, _impl_.data_),
  ~0u,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Request, _impl_.policy_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::policy::NamespacesGet_Response, _impl_.data_),
  ~0u,
  0,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::com::wazuh::api::engine::policy::StorePost_Request)},
  { 8, 15, -1, sizeof(::com::wazuh::api::engine::policy::StoreDelete_Request)},
  { 16, 24, -1, sizeof(::com::wazuh::api::engine::policy::StoreGet_Request)},
  { 26, 35, -1, sizeof(::com::wazuh::api::engine::policy::StoreGet_Response)},
  { 38, 47, -1, sizeof(::com::wazuh::api::engine::policy::AssetPost_Request)},
  { 50, 59, -1, sizeof(::com::wazuh::api::engine::policy::AssetPost_Response)},
  { 62, 71, -1, sizeof(::com::wazuh::api::engine::policy::AssetDelete_Request)},
  { 74, 83, -1, sizeof(::com::wazuh::api::engine::policy::AssetDelete_Response)},
  { 86, 94, -1, sizeof(::com::wazuh::api::engine::policy::AssetGet_Request)},
  { 96, 105, -1, sizeof(::com::wazuh::api::engine::policy::AssetGet_Response)},
  { 108, 115, -1, sizeof(::com::wazuh::api::engine::policy::AssetCleanDeleted_Request)},
  { 116, 125, -1, sizeof(::com::wazuh::api::engine::policy::AssetCleanDeleted_Response)},
  { 128, 136, -1, sizeof(::com::wazuh::api::engine::policy::DefaultParentGet_Request)},
  { 138, 147, -1, sizeof(::com::wazuh::api::engine::policy::DefaultParentGet_Response)},
  { 150, 159, -1, sizeof(::com::wazuh::api::engine::policy::DefaultParentPost_Request)},
  { 162, 171, -1, sizeof(::com::wazuh::api::engine::policy::DefaultParentPost_Response)},
  { 174, 183, -1, sizeof(::com::wazuh::api::engine::policy::DefaultParentDelete_Request)},
  { 186, 195, -1, sizeof(::com::wazuh::api::engine::policy::DefaultParentDelete_Response)},
  { 198, -1, -1, sizeof(::com::wazuh::api::engine::policy::PoliciesGet_Request)},
  { 204, 213, -1, sizeof(::com::wazuh::api::engine::policy::PoliciesGet_Response)},
  { 216, 223, -1, sizeof(::com::wazuh::api::engine::policy::NamespacesGet_Request)},
  { 224, 233, -1, sizeof(::com::wazuh::api::engine::policy::NamespacesGet_Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::com::wazuh::api::engine::policy::_StorePost_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_StoreDelete_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_StoreGet_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_StoreGet_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetPost_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetPost_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetDelete_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetDelete_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetGet_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetGet_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetCleanDeleted_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_AssetCleanDeleted_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_DefaultParentGet_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_DefaultParentGet_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_DefaultParentPost_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_DefaultParentPost_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_DefaultParentDelete_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_DefaultParentDelete_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_PoliciesGet_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_PoliciesGet_Response_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_NamespacesGet_Request_default_instance_._instance,
  &::com::wazuh::api::engine::policy::_NamespacesGet_Response_default_instance_._instance,
};

const char descriptor_table_protodef_policy_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014policy.proto\022\033com.wazuh.api.engine.pol"
  "icy\032\014engine.proto\"3\n\021StorePost_Request\022\023"
  "\n\006policy\030\001 \001(\tH\000\210\001\001B\t\n\007_policy\"5\n\023StoreD"
  "elete_Request\022\023\n\006policy\030\001 \001(\tH\000\210\001\001B\t\n\007_p"
  "olicy\"F\n\020StoreGet_Request\022\023\n\006policy\030\001 \001("
  "\tH\000\210\001\001\022\022\n\nnamespaces\030\002 \003(\tB\t\n\007_policy\"\201\001"
  "\n\021StoreGet_Response\0222\n\006status\030\001 \001(\0162\".co"
  "m.wazuh.api.engine.ReturnStatus\022\022\n\005error"
  "\030\002 \001(\tH\000\210\001\001\022\021\n\004data\030\003 \001(\tH\001\210\001\001B\010\n\006_error"
  "B\007\n\005_data\"w\n\021AssetPost_Request\022\023\n\006policy"
  "\030\001 \001(\tH\000\210\001\001\022\022\n\005asset\030\002 \001(\tH\001\210\001\001\022\026\n\tnames"
  "pace\030\003 \001(\tH\002\210\001\001B\t\n\007_policyB\010\n\006_assetB\014\n\n"
  "_namespace\"\210\001\n\022AssetPost_Response\0222\n\006sta"
  "tus\030\001 \001(\0162\".com.wazuh.api.engine.ReturnS"
  "tatus\022\022\n\005error\030\002 \001(\tH\000\210\001\001\022\024\n\007warning\030\003 \001"
  "(\tH\001\210\001\001B\010\n\006_errorB\n\n\010_warning\"y\n\023AssetDe"
  "lete_Request\022\023\n\006policy\030\001 \001(\tH\000\210\001\001\022\022\n\005ass"
  "et\030\002 \001(\tH\001\210\001\001\022\026\n\tnamespace\030\003 \001(\tH\002\210\001\001B\t\n"
  "\007_policyB\010\n\006_assetB\014\n\n_namespace\"\212\001\n\024Ass"
  "etDelete_Response\0222\n\006status\030\001 \001(\0162\".com."
  "wazuh.api.engine.ReturnStatus\022\022\n\005error\030\002"
  " \001(\tH\000\210\001\001\022\024\n\007warning\030\003 \001(\tH\001\210\001\001B\010\n\006_erro"
  "rB\n\n\010_warning\"X\n\020AssetGet_Request\022\023\n\006pol"
  "icy\030\001 \001(\tH\000\210\001\001\022\026\n\tnamespace\030\002 \001(\tH\001\210\001\001B\t"
  "\n\007_policyB\014\n\n_namespace\"s\n\021AssetGet_Resp"
  "onse\0222\n\006status\030\001 \001(\0162\".com.wazuh.api.eng"
  "ine.ReturnStatus\022\022\n\005error\030\002 \001(\tH\000\210\001\001\022\014\n\004"
  "data\030\003 \003(\tB\010\n\006_error\";\n\031AssetCleanDelete"
  "d_Request\022\023\n\006policy\030\001 \001(\tH\000\210\001\001B\t\n\007_polic"
  "y\"\212\001\n\032AssetCleanDeleted_Response\0222\n\006stat"
  "us\030\001 \001(\0162\".com.wazuh.api.engine.ReturnSt"
  "atus\022\022\n\005error\030\002 \001(\tH\000\210\001\001\022\021\n\004data\030\003 \001(\tH\001"
  "\210\001\001B\010\n\006_errorB\007\n\005_data\"`\n\030DefaultParentG"
  "et_Request\022\023\n\006policy\030\001 \001(\tH\000\210\001\001\022\026\n\tnames"
  "pace\030\002 \001(\tH\001\210\001\001B\t\n\007_policyB\014\n\n_namespace"
  "\"{\n\031DefaultParentGet_Response\0222\n\006status\030"
  "\001 \001(\0162\".com.wazuh.api.engine.ReturnStatu"
  "s\022\022\n\005error\030\002 \001(\tH\000\210\001\001\022\014\n\004data\030\003 \003(\tB\010\n\006_"
  "error\"\201\001\n\031DefaultParentPost_Request\022\023\n\006p"
  "olicy\030\001 \001(\tH\000\210\001\001\022\026\n\tnamespace\030\002 \001(\tH\001\210\001\001"
  "\022\023\n\006parent\030\003 \001(\tH\002\210\001\001B\t\n\007_policyB\014\n\n_nam"
  "espaceB\t\n\007_parent\"\220\001\n\032DefaultParentPost_"
  "Response\0222\n\006status\030\001 \001(\0162\".com.wazuh.api"
  ".engine.ReturnStatus\022\022\n\005error\030\002 \001(\tH\000\210\001\001"
  "\022\024\n\007warning\030\003 \001(\tH\001\210\001\001B\010\n\006_errorB\n\n\010_war"
  "ning\"\203\001\n\033DefaultParentDelete_Request\022\023\n\006"
  "policy\030\001 \001(\tH\000\210\001\001\022\026\n\tnamespace\030\002 \001(\tH\001\210\001"
  "\001\022\023\n\006parent\030\003 \001(\tH\002\210\001\001B\t\n\007_policyB\014\n\n_na"
  "mespaceB\t\n\007_parent\"\222\001\n\034DefaultParentDele"
  "te_Response\0222\n\006status\030\001 \001(\0162\".com.wazuh."
  "api.engine.ReturnStatus\022\022\n\005error\030\002 \001(\tH\000"
  "\210\001\001\022\024\n\007warning\030\003 \001(\tH\001\210\001\001B\010\n\006_errorB\n\n\010_"
  "warning\"\025\n\023PoliciesGet_Request\"v\n\024Polici"
  "esGet_Response\0222\n\006status\030\001 \001(\0162\".com.waz"
  "uh.api.engine.ReturnStatus\022\022\n\005error\030\002 \001("
  "\tH\000\210\001\001\022\014\n\004data\030\003 \003(\tB\010\n\006_error\"7\n\025Namesp"
  "acesGet_Request\022\023\n\006policy\030\001 \001(\tH\000\210\001\001B\t\n\007"
  "_policy\"x\n\026NamespacesGet_Response\0222\n\006sta"
  "tus\030\001 \001(\0162\".com.wazuh.api.engine.ReturnS"
  "tatus\022\022\n\005error\030\002 \001(\tH\000\210\001\001\022\014\n\004data\030\003 \003(\tB"
  "\010\n\006_errorb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_policy_2eproto_deps[1] = {
  &::descriptor_table_engine_2eproto,
};
static ::_pbi::once_flag descriptor_table_policy_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_policy_2eproto = {
    false, false, 2417, descriptor_table_protodef_policy_2eproto,
    "policy.proto",
    &descriptor_table_policy_2eproto_once, descriptor_table_policy_2eproto_deps, 1, 22,
    schemas, file_default_instances, TableStruct_policy_2eproto::offsets,
    file_level_metadata_policy_2eproto, file_level_enum_descriptors_policy_2eproto,
    file_level_service_descriptors_policy_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_policy_2eproto_getter() {
  return &descriptor_table_policy_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_policy_2eproto(&descriptor_table_policy_2eproto);
namespace com {
namespace wazuh {
namespace api {
namespace engine {
namespace policy {

// ===================================================================

class StorePost_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<StorePost_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StorePost_Request::StorePost_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.StorePost_Request)
}
StorePost_Request::StorePost_Request(const StorePost_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorePost_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.StorePost_Request)
}

inline void StorePost_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorePost_Request::~StorePost_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.StorePost_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorePost_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
}

void StorePost_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorePost_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.StorePost_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.policy_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorePost_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.StorePost_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorePost_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.StorePost_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.StorePost_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.StorePost_Request)
  return target;
}

size_t StorePost_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.StorePost_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string policy = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorePost_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorePost_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorePost_Request::GetClassData() const { return &_class_data_; }


void StorePost_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorePost_Request*>(&to_msg);
  auto& from = static_cast<const StorePost_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.StorePost_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_policy()) {
    _this->_internal_set_policy(from._internal_policy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorePost_Request::CopyFrom(const StorePost_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.StorePost_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorePost_Request::IsInitialized() const {
  return true;
}

void StorePost_Request::InternalSwap(StorePost_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StorePost_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[0]);
}

// ===================================================================

class StoreDelete_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreDelete_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StoreDelete_Request::StoreDelete_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.StoreDelete_Request)
}
StoreDelete_Request::StoreDelete_Request(const StoreDelete_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StoreDelete_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.StoreDelete_Request)
}

inline void StoreDelete_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StoreDelete_Request::~StoreDelete_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.StoreDelete_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StoreDelete_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
}

void StoreDelete_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StoreDelete_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.StoreDelete_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.policy_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StoreDelete_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.StoreDelete_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StoreDelete_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.StoreDelete_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.StoreDelete_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.StoreDelete_Request)
  return target;
}

size_t StoreDelete_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.StoreDelete_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string policy = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StoreDelete_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StoreDelete_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StoreDelete_Request::GetClassData() const { return &_class_data_; }


void StoreDelete_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StoreDelete_Request*>(&to_msg);
  auto& from = static_cast<const StoreDelete_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.StoreDelete_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_policy()) {
    _this->_internal_set_policy(from._internal_policy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StoreDelete_Request::CopyFrom(const StoreDelete_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.StoreDelete_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreDelete_Request::IsInitialized() const {
  return true;
}

void StoreDelete_Request::InternalSwap(StoreDelete_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StoreDelete_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[1]);
}

// ===================================================================

class StoreGet_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreGet_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StoreGet_Request::StoreGet_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.StoreGet_Request)
}
StoreGet_Request::StoreGet_Request(const StoreGet_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StoreGet_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.namespaces_){from._impl_.namespaces_}
    , decltype(_impl_.policy_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.StoreGet_Request)
}

inline void StoreGet_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.namespaces_){arena}
    , decltype(_impl_.policy_){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StoreGet_Request::~StoreGet_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.StoreGet_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StoreGet_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.namespaces_.~RepeatedPtrField();
  _impl_.policy_.Destroy();
}

void StoreGet_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StoreGet_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.StoreGet_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.namespaces_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.policy_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StoreGet_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.StoreGet_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // repeated string namespaces = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_namespaces();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.StoreGet_Request.namespaces"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StoreGet_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.StoreGet_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.StoreGet_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  // repeated string namespaces = 2;
  for (int i = 0, n = this->_internal_namespaces_size(); i < n; i++) {
    const auto& s = this->_internal_namespaces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.StoreGet_Request.namespaces");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.StoreGet_Request)
  return target;
}

size_t StoreGet_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.StoreGet_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string namespaces = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.namespaces_.size());
  for (int i = 0, n = _impl_.namespaces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.namespaces_.Get(i));
  }

  // optional string policy = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StoreGet_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StoreGet_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StoreGet_Request::GetClassData() const { return &_class_data_; }


void StoreGet_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StoreGet_Request*>(&to_msg);
  auto& from = static_cast<const StoreGet_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.StoreGet_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.namespaces_.MergeFrom(from._impl_.namespaces_);
  if (from._internal_has_policy()) {
    _this->_internal_set_policy(from._internal_policy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StoreGet_Request::CopyFrom(const StoreGet_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.StoreGet_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreGet_Request::IsInitialized() const {
  return true;
}

void StoreGet_Request::InternalSwap(StoreGet_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.namespaces_.InternalSwap(&other->_impl_.namespaces_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StoreGet_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[2]);
}

// ===================================================================

class StoreGet_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreGet_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

StoreGet_Response::StoreGet_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.StoreGet_Response)
}
StoreGet_Response::StoreGet_Response(const StoreGet_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StoreGet_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.data_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_data()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.StoreGet_Response)
}

inline void StoreGet_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.data_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StoreGet_Response::~StoreGet_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.StoreGet_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StoreGet_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  _impl_.data_.Destroy();
}

void StoreGet_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StoreGet_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.StoreGet_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StoreGet_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.StoreGet_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional string data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.StoreGet_Response.data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StoreGet_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.StoreGet_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.StoreGet_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional string data = 3;
  if (_internal_has_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.StoreGet_Response.data");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.StoreGet_Response)
  return target;
}

size_t StoreGet_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.StoreGet_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional string data = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_data());
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StoreGet_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StoreGet_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StoreGet_Response::GetClassData() const { return &_class_data_; }


void StoreGet_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StoreGet_Response*>(&to_msg);
  auto& from = static_cast<const StoreGet_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.StoreGet_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_data(from._internal_data());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StoreGet_Response::CopyFrom(const StoreGet_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.StoreGet_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreGet_Response::IsInitialized() const {
  return true;
}

void StoreGet_Response::InternalSwap(StoreGet_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StoreGet_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[3]);
}

// ===================================================================

class AssetPost_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetPost_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_asset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_namespace_(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

AssetPost_Request::AssetPost_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetPost_Request)
}
AssetPost_Request::AssetPost_Request(const AssetPost_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetPost_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.asset_){}
    , decltype(_impl_.namespace__){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.asset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_asset()) {
    _this->_impl_.asset_.Set(from._internal_asset(), 
      _this->GetArenaForAllocation());
  }
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_namespace_()) {
    _this->_impl_.namespace__.Set(from._internal_namespace_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetPost_Request)
}

inline void AssetPost_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.asset_){}
    , decltype(_impl_.namespace__){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.asset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetPost_Request::~AssetPost_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetPost_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetPost_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
  _impl_.asset_.Destroy();
  _impl_.namespace__.Destroy();
}

void AssetPost_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetPost_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetPost_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.asset_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetPost_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetPost_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // optional string asset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_asset();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetPost_Request.asset"));
        } else
          goto handle_unusual;
        continue;
      // optional string namespace = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetPost_Request.namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetPost_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetPost_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetPost_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  // optional string asset = 2;
  if (_internal_has_asset()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_asset().data(), static_cast<int>(this->_internal_asset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetPost_Request.asset");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_asset(), target);
  }

  // optional string namespace = 3;
  if (_internal_has_namespace_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetPost_Request.namespace");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_namespace_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetPost_Request)
  return target;
}

size_t AssetPost_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetPost_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string policy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_policy());
    }

    // optional string asset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_asset());
    }

    // optional string namespace = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_namespace_());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetPost_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetPost_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetPost_Request::GetClassData() const { return &_class_data_; }


void AssetPost_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetPost_Request*>(&to_msg);
  auto& from = static_cast<const AssetPost_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetPost_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_asset(from._internal_asset());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_namespace_(from._internal_namespace_());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetPost_Request::CopyFrom(const AssetPost_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetPost_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetPost_Request::IsInitialized() const {
  return true;
}

void AssetPost_Request::InternalSwap(AssetPost_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.asset_, lhs_arena,
      &other->_impl_.asset_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.namespace__, lhs_arena,
      &other->_impl_.namespace__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetPost_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[4]);
}

// ===================================================================

class AssetPost_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetPost_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_warning(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AssetPost_Response::AssetPost_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetPost_Response)
}
AssetPost_Response::AssetPost_Response(const AssetPost_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetPost_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_warning()) {
    _this->_impl_.warning_.Set(from._internal_warning(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetPost_Response)
}

inline void AssetPost_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetPost_Response::~AssetPost_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetPost_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetPost_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  _impl_.warning_.Destroy();
}

void AssetPost_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetPost_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetPost_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.warning_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetPost_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetPost_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional string warning = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_warning();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetPost_Response.warning"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetPost_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetPost_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetPost_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional string warning = 3;
  if (_internal_has_warning()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetPost_Response.warning");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_warning(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetPost_Response)
  return target;
}

size_t AssetPost_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetPost_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional string warning = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_warning());
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetPost_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetPost_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetPost_Response::GetClassData() const { return &_class_data_; }


void AssetPost_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetPost_Response*>(&to_msg);
  auto& from = static_cast<const AssetPost_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetPost_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_warning(from._internal_warning());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetPost_Response::CopyFrom(const AssetPost_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetPost_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetPost_Response::IsInitialized() const {
  return true;
}

void AssetPost_Response::InternalSwap(AssetPost_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.warning_, lhs_arena,
      &other->_impl_.warning_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetPost_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[5]);
}

// ===================================================================

class AssetDelete_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetDelete_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_asset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_namespace_(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

AssetDelete_Request::AssetDelete_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetDelete_Request)
}
AssetDelete_Request::AssetDelete_Request(const AssetDelete_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetDelete_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.asset_){}
    , decltype(_impl_.namespace__){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.asset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_asset()) {
    _this->_impl_.asset_.Set(from._internal_asset(), 
      _this->GetArenaForAllocation());
  }
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_namespace_()) {
    _this->_impl_.namespace__.Set(from._internal_namespace_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetDelete_Request)
}

inline void AssetDelete_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.asset_){}
    , decltype(_impl_.namespace__){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.asset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetDelete_Request::~AssetDelete_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetDelete_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetDelete_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
  _impl_.asset_.Destroy();
  _impl_.namespace__.Destroy();
}

void AssetDelete_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetDelete_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetDelete_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.asset_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetDelete_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetDelete_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // optional string asset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_asset();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetDelete_Request.asset"));
        } else
          goto handle_unusual;
        continue;
      // optional string namespace = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetDelete_Request.namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetDelete_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetDelete_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetDelete_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  // optional string asset = 2;
  if (_internal_has_asset()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_asset().data(), static_cast<int>(this->_internal_asset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetDelete_Request.asset");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_asset(), target);
  }

  // optional string namespace = 3;
  if (_internal_has_namespace_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetDelete_Request.namespace");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_namespace_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetDelete_Request)
  return target;
}

size_t AssetDelete_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetDelete_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string policy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_policy());
    }

    // optional string asset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_asset());
    }

    // optional string namespace = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_namespace_());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetDelete_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetDelete_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetDelete_Request::GetClassData() const { return &_class_data_; }


void AssetDelete_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetDelete_Request*>(&to_msg);
  auto& from = static_cast<const AssetDelete_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetDelete_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_asset(from._internal_asset());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_namespace_(from._internal_namespace_());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetDelete_Request::CopyFrom(const AssetDelete_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetDelete_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetDelete_Request::IsInitialized() const {
  return true;
}

void AssetDelete_Request::InternalSwap(AssetDelete_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.asset_, lhs_arena,
      &other->_impl_.asset_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.namespace__, lhs_arena,
      &other->_impl_.namespace__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetDelete_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[6]);
}

// ===================================================================

class AssetDelete_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetDelete_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_warning(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AssetDelete_Response::AssetDelete_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetDelete_Response)
}
AssetDelete_Response::AssetDelete_Response(const AssetDelete_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetDelete_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_warning()) {
    _this->_impl_.warning_.Set(from._internal_warning(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetDelete_Response)
}

inline void AssetDelete_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetDelete_Response::~AssetDelete_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetDelete_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetDelete_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  _impl_.warning_.Destroy();
}

void AssetDelete_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetDelete_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetDelete_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.warning_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetDelete_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetDelete_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional string warning = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_warning();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetDelete_Response.warning"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetDelete_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetDelete_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetDelete_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional string warning = 3;
  if (_internal_has_warning()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetDelete_Response.warning");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_warning(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetDelete_Response)
  return target;
}

size_t AssetDelete_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetDelete_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional string warning = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_warning());
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetDelete_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetDelete_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetDelete_Response::GetClassData() const { return &_class_data_; }


void AssetDelete_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetDelete_Response*>(&to_msg);
  auto& from = static_cast<const AssetDelete_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetDelete_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_warning(from._internal_warning());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetDelete_Response::CopyFrom(const AssetDelete_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetDelete_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetDelete_Response::IsInitialized() const {
  return true;
}

void AssetDelete_Response::InternalSwap(AssetDelete_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.warning_, lhs_arena,
      &other->_impl_.warning_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetDelete_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[7]);
}

// ===================================================================

class AssetGet_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetGet_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_namespace_(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AssetGet_Request::AssetGet_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetGet_Request)
}
AssetGet_Request::AssetGet_Request(const AssetGet_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetGet_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_namespace_()) {
    _this->_impl_.namespace__.Set(from._internal_namespace_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetGet_Request)
}

inline void AssetGet_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetGet_Request::~AssetGet_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetGet_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetGet_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
  _impl_.namespace__.Destroy();
}

void AssetGet_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetGet_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetGet_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetGet_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetGet_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // optional string namespace = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetGet_Request.namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetGet_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetGet_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetGet_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  // optional string namespace = 2;
  if (_internal_has_namespace_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetGet_Request.namespace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_namespace_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetGet_Request)
  return target;
}

size_t AssetGet_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetGet_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string policy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_policy());
    }

    // optional string namespace = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_namespace_());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetGet_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetGet_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetGet_Request::GetClassData() const { return &_class_data_; }


void AssetGet_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetGet_Request*>(&to_msg);
  auto& from = static_cast<const AssetGet_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetGet_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_namespace_(from._internal_namespace_());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetGet_Request::CopyFrom(const AssetGet_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetGet_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetGet_Request::IsInitialized() const {
  return true;
}

void AssetGet_Request::InternalSwap(AssetGet_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.namespace__, lhs_arena,
      &other->_impl_.namespace__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetGet_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[8]);
}

// ===================================================================

class AssetGet_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetGet_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AssetGet_Response::AssetGet_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetGet_Response)
}
AssetGet_Response::AssetGet_Response(const AssetGet_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetGet_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){from._impl_.data_}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetGet_Response)
}

inline void AssetGet_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){arena}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetGet_Response::~AssetGet_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetGet_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetGet_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
  _impl_.error_.Destroy();
}

void AssetGet_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetGet_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetGet_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.error_.ClearNonDefaultToEmpty();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetGet_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetGet_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // repeated string data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetGet_Response.data"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetGet_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetGet_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetGet_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // repeated string data = 3;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetGet_Response.data");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetGet_Response)
  return target;
}

size_t AssetGet_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetGet_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.data_.size());
  for (int i = 0, n = _impl_.data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.data_.Get(i));
  }

  // optional string error = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetGet_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetGet_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetGet_Response::GetClassData() const { return &_class_data_; }


void AssetGet_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetGet_Response*>(&to_msg);
  auto& from = static_cast<const AssetGet_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetGet_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  if (from._internal_has_error()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetGet_Response::CopyFrom(const AssetGet_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetGet_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetGet_Response::IsInitialized() const {
  return true;
}

void AssetGet_Response::InternalSwap(AssetGet_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetGet_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[9]);
}

// ===================================================================

class AssetCleanDeleted_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetCleanDeleted_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AssetCleanDeleted_Request::AssetCleanDeleted_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
}
AssetCleanDeleted_Request::AssetCleanDeleted_Request(const AssetCleanDeleted_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetCleanDeleted_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
}

inline void AssetCleanDeleted_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetCleanDeleted_Request::~AssetCleanDeleted_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetCleanDeleted_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
}

void AssetCleanDeleted_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetCleanDeleted_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.policy_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetCleanDeleted_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetCleanDeleted_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetCleanDeleted_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetCleanDeleted_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
  return target;
}

size_t AssetCleanDeleted_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string policy = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetCleanDeleted_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetCleanDeleted_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetCleanDeleted_Request::GetClassData() const { return &_class_data_; }


void AssetCleanDeleted_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetCleanDeleted_Request*>(&to_msg);
  auto& from = static_cast<const AssetCleanDeleted_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_policy()) {
    _this->_internal_set_policy(from._internal_policy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetCleanDeleted_Request::CopyFrom(const AssetCleanDeleted_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetCleanDeleted_Request::IsInitialized() const {
  return true;
}

void AssetCleanDeleted_Request::InternalSwap(AssetCleanDeleted_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetCleanDeleted_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[10]);
}

// ===================================================================

class AssetCleanDeleted_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<AssetCleanDeleted_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AssetCleanDeleted_Response::AssetCleanDeleted_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
}
AssetCleanDeleted_Response::AssetCleanDeleted_Response(const AssetCleanDeleted_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetCleanDeleted_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.data_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_data()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
}

inline void AssetCleanDeleted_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.data_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetCleanDeleted_Response::~AssetCleanDeleted_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetCleanDeleted_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  _impl_.data_.Destroy();
}

void AssetCleanDeleted_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetCleanDeleted_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetCleanDeleted_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetCleanDeleted_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional string data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.AssetCleanDeleted_Response.data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetCleanDeleted_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetCleanDeleted_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional string data = 3;
  if (_internal_has_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.AssetCleanDeleted_Response.data");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
  return target;
}

size_t AssetCleanDeleted_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional string data = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_data());
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetCleanDeleted_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetCleanDeleted_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetCleanDeleted_Response::GetClassData() const { return &_class_data_; }


void AssetCleanDeleted_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetCleanDeleted_Response*>(&to_msg);
  auto& from = static_cast<const AssetCleanDeleted_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_data(from._internal_data());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetCleanDeleted_Response::CopyFrom(const AssetCleanDeleted_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.AssetCleanDeleted_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetCleanDeleted_Response::IsInitialized() const {
  return true;
}

void AssetCleanDeleted_Response::InternalSwap(AssetCleanDeleted_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetCleanDeleted_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[11]);
}

// ===================================================================

class DefaultParentGet_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<DefaultParentGet_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_namespace_(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

DefaultParentGet_Request::DefaultParentGet_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.DefaultParentGet_Request)
}
DefaultParentGet_Request::DefaultParentGet_Request(const DefaultParentGet_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DefaultParentGet_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_namespace_()) {
    _this->_impl_.namespace__.Set(from._internal_namespace_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.DefaultParentGet_Request)
}

inline void DefaultParentGet_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DefaultParentGet_Request::~DefaultParentGet_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.DefaultParentGet_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DefaultParentGet_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
  _impl_.namespace__.Destroy();
}

void DefaultParentGet_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DefaultParentGet_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.DefaultParentGet_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefaultParentGet_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentGet_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // optional string namespace = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentGet_Request.namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DefaultParentGet_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.DefaultParentGet_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentGet_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  // optional string namespace = 2;
  if (_internal_has_namespace_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentGet_Request.namespace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_namespace_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.DefaultParentGet_Request)
  return target;
}

size_t DefaultParentGet_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.DefaultParentGet_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string policy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_policy());
    }

    // optional string namespace = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_namespace_());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DefaultParentGet_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DefaultParentGet_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DefaultParentGet_Request::GetClassData() const { return &_class_data_; }


void DefaultParentGet_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DefaultParentGet_Request*>(&to_msg);
  auto& from = static_cast<const DefaultParentGet_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.DefaultParentGet_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_namespace_(from._internal_namespace_());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DefaultParentGet_Request::CopyFrom(const DefaultParentGet_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.DefaultParentGet_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultParentGet_Request::IsInitialized() const {
  return true;
}

void DefaultParentGet_Request::InternalSwap(DefaultParentGet_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.namespace__, lhs_arena,
      &other->_impl_.namespace__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DefaultParentGet_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[12]);
}

// ===================================================================

class DefaultParentGet_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<DefaultParentGet_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DefaultParentGet_Response::DefaultParentGet_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.DefaultParentGet_Response)
}
DefaultParentGet_Response::DefaultParentGet_Response(const DefaultParentGet_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DefaultParentGet_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){from._impl_.data_}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.DefaultParentGet_Response)
}

inline void DefaultParentGet_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){arena}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DefaultParentGet_Response::~DefaultParentGet_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.DefaultParentGet_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DefaultParentGet_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
  _impl_.error_.Destroy();
}

void DefaultParentGet_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DefaultParentGet_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.DefaultParentGet_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.error_.ClearNonDefaultToEmpty();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefaultParentGet_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentGet_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // repeated string data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentGet_Response.data"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DefaultParentGet_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.DefaultParentGet_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentGet_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // repeated string data = 3;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentGet_Response.data");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.DefaultParentGet_Response)
  return target;
}

size_t DefaultParentGet_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.DefaultParentGet_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.data_.size());
  for (int i = 0, n = _impl_.data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.data_.Get(i));
  }

  // optional string error = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DefaultParentGet_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DefaultParentGet_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DefaultParentGet_Response::GetClassData() const { return &_class_data_; }


void DefaultParentGet_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DefaultParentGet_Response*>(&to_msg);
  auto& from = static_cast<const DefaultParentGet_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.DefaultParentGet_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  if (from._internal_has_error()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DefaultParentGet_Response::CopyFrom(const DefaultParentGet_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.DefaultParentGet_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultParentGet_Response::IsInitialized() const {
  return true;
}

void DefaultParentGet_Response::InternalSwap(DefaultParentGet_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DefaultParentGet_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[13]);
}

// ===================================================================

class DefaultParentPost_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<DefaultParentPost_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_namespace_(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_parent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

DefaultParentPost_Request::DefaultParentPost_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.DefaultParentPost_Request)
}
DefaultParentPost_Request::DefaultParentPost_Request(const DefaultParentPost_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DefaultParentPost_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}
    , decltype(_impl_.parent_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_namespace_()) {
    _this->_impl_.namespace__.Set(from._internal_namespace_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.DefaultParentPost_Request)
}

inline void DefaultParentPost_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}
    , decltype(_impl_.parent_){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DefaultParentPost_Request::~DefaultParentPost_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.DefaultParentPost_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DefaultParentPost_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
  _impl_.namespace__.Destroy();
  _impl_.parent_.Destroy();
}

void DefaultParentPost_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DefaultParentPost_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.DefaultParentPost_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.parent_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefaultParentPost_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentPost_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // optional string namespace = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentPost_Request.namespace"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentPost_Request.parent"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DefaultParentPost_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.DefaultParentPost_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentPost_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  // optional string namespace = 2;
  if (_internal_has_namespace_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentPost_Request.namespace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_namespace_(), target);
  }

  // optional string parent = 3;
  if (_internal_has_parent()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentPost_Request.parent");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.DefaultParentPost_Request)
  return target;
}

size_t DefaultParentPost_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.DefaultParentPost_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string policy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_policy());
    }

    // optional string namespace = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_namespace_());
    }

    // optional string parent = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_parent());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DefaultParentPost_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DefaultParentPost_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DefaultParentPost_Request::GetClassData() const { return &_class_data_; }


void DefaultParentPost_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DefaultParentPost_Request*>(&to_msg);
  auto& from = static_cast<const DefaultParentPost_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.DefaultParentPost_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_namespace_(from._internal_namespace_());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_parent(from._internal_parent());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DefaultParentPost_Request::CopyFrom(const DefaultParentPost_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.DefaultParentPost_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultParentPost_Request::IsInitialized() const {
  return true;
}

void DefaultParentPost_Request::InternalSwap(DefaultParentPost_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.namespace__, lhs_arena,
      &other->_impl_.namespace__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DefaultParentPost_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[14]);
}

// ===================================================================

class DefaultParentPost_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<DefaultParentPost_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_warning(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

DefaultParentPost_Response::DefaultParentPost_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.DefaultParentPost_Response)
}
DefaultParentPost_Response::DefaultParentPost_Response(const DefaultParentPost_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DefaultParentPost_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_warning()) {
    _this->_impl_.warning_.Set(from._internal_warning(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.DefaultParentPost_Response)
}

inline void DefaultParentPost_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DefaultParentPost_Response::~DefaultParentPost_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.DefaultParentPost_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DefaultParentPost_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  _impl_.warning_.Destroy();
}

void DefaultParentPost_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DefaultParentPost_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.DefaultParentPost_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.warning_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefaultParentPost_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentPost_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional string warning = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_warning();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentPost_Response.warning"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DefaultParentPost_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.DefaultParentPost_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentPost_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional string warning = 3;
  if (_internal_has_warning()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentPost_Response.warning");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_warning(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.DefaultParentPost_Response)
  return target;
}

size_t DefaultParentPost_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.DefaultParentPost_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional string warning = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_warning());
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DefaultParentPost_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DefaultParentPost_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DefaultParentPost_Response::GetClassData() const { return &_class_data_; }


void DefaultParentPost_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DefaultParentPost_Response*>(&to_msg);
  auto& from = static_cast<const DefaultParentPost_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.DefaultParentPost_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_warning(from._internal_warning());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DefaultParentPost_Response::CopyFrom(const DefaultParentPost_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.DefaultParentPost_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultParentPost_Response::IsInitialized() const {
  return true;
}

void DefaultParentPost_Response::InternalSwap(DefaultParentPost_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.warning_, lhs_arena,
      &other->_impl_.warning_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DefaultParentPost_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[15]);
}

// ===================================================================

class DefaultParentDelete_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<DefaultParentDelete_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_namespace_(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_parent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

DefaultParentDelete_Request::DefaultParentDelete_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
}
DefaultParentDelete_Request::DefaultParentDelete_Request(const DefaultParentDelete_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DefaultParentDelete_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}
    , decltype(_impl_.parent_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_namespace_()) {
    _this->_impl_.namespace__.Set(from._internal_namespace_(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
}

inline void DefaultParentDelete_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.namespace__){}
    , decltype(_impl_.parent_){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.namespace__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.namespace__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DefaultParentDelete_Request::~DefaultParentDelete_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DefaultParentDelete_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
  _impl_.namespace__.Destroy();
  _impl_.parent_.Destroy();
}

void DefaultParentDelete_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DefaultParentDelete_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.parent_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefaultParentDelete_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentDelete_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // optional string namespace = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentDelete_Request.namespace"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentDelete_Request.parent"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DefaultParentDelete_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentDelete_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  // optional string namespace = 2;
  if (_internal_has_namespace_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentDelete_Request.namespace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_namespace_(), target);
  }

  // optional string parent = 3;
  if (_internal_has_parent()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentDelete_Request.parent");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
  return target;
}

size_t DefaultParentDelete_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string policy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_policy());
    }

    // optional string namespace = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_namespace_());
    }

    // optional string parent = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_parent());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DefaultParentDelete_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DefaultParentDelete_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DefaultParentDelete_Request::GetClassData() const { return &_class_data_; }


void DefaultParentDelete_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DefaultParentDelete_Request*>(&to_msg);
  auto& from = static_cast<const DefaultParentDelete_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_namespace_(from._internal_namespace_());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_parent(from._internal_parent());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DefaultParentDelete_Request::CopyFrom(const DefaultParentDelete_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.DefaultParentDelete_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultParentDelete_Request::IsInitialized() const {
  return true;
}

void DefaultParentDelete_Request::InternalSwap(DefaultParentDelete_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.namespace__, lhs_arena,
      &other->_impl_.namespace__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DefaultParentDelete_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[16]);
}

// ===================================================================

class DefaultParentDelete_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<DefaultParentDelete_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_warning(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

DefaultParentDelete_Response::DefaultParentDelete_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
}
DefaultParentDelete_Response::DefaultParentDelete_Response(const DefaultParentDelete_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DefaultParentDelete_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_warning()) {
    _this->_impl_.warning_.Set(from._internal_warning(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
}

inline void DefaultParentDelete_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.warning_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.warning_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.warning_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DefaultParentDelete_Response::~DefaultParentDelete_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DefaultParentDelete_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  _impl_.warning_.Destroy();
}

void DefaultParentDelete_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DefaultParentDelete_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.warning_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DefaultParentDelete_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentDelete_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional string warning = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_warning();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.DefaultParentDelete_Response.warning"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DefaultParentDelete_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentDelete_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional string warning = 3;
  if (_internal_has_warning()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warning().data(), static_cast<int>(this->_internal_warning().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.DefaultParentDelete_Response.warning");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_warning(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
  return target;
}

size_t DefaultParentDelete_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional string warning = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_warning());
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DefaultParentDelete_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DefaultParentDelete_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DefaultParentDelete_Response::GetClassData() const { return &_class_data_; }


void DefaultParentDelete_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DefaultParentDelete_Response*>(&to_msg);
  auto& from = static_cast<const DefaultParentDelete_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_warning(from._internal_warning());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DefaultParentDelete_Response::CopyFrom(const DefaultParentDelete_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.DefaultParentDelete_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultParentDelete_Response::IsInitialized() const {
  return true;
}

void DefaultParentDelete_Response::InternalSwap(DefaultParentDelete_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.warning_, lhs_arena,
      &other->_impl_.warning_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DefaultParentDelete_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[17]);
}

// ===================================================================

class PoliciesGet_Request::_Internal {
 public:
};

PoliciesGet_Request::PoliciesGet_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.PoliciesGet_Request)
}
PoliciesGet_Request::PoliciesGet_Request(const PoliciesGet_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PoliciesGet_Request* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.PoliciesGet_Request)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PoliciesGet_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PoliciesGet_Request::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PoliciesGet_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[18]);
}

// ===================================================================

class PoliciesGet_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<PoliciesGet_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PoliciesGet_Response::PoliciesGet_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.PoliciesGet_Response)
}
PoliciesGet_Response::PoliciesGet_Response(const PoliciesGet_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PoliciesGet_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){from._impl_.data_}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.PoliciesGet_Response)
}

inline void PoliciesGet_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){arena}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PoliciesGet_Response::~PoliciesGet_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.PoliciesGet_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PoliciesGet_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
  _impl_.error_.Destroy();
}

void PoliciesGet_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PoliciesGet_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.PoliciesGet_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.error_.ClearNonDefaultToEmpty();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PoliciesGet_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.PoliciesGet_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // repeated string data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.PoliciesGet_Response.data"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PoliciesGet_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.PoliciesGet_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.PoliciesGet_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // repeated string data = 3;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.PoliciesGet_Response.data");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.PoliciesGet_Response)
  return target;
}

size_t PoliciesGet_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.PoliciesGet_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.data_.size());
  for (int i = 0, n = _impl_.data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.data_.Get(i));
  }

  // optional string error = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PoliciesGet_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PoliciesGet_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PoliciesGet_Response::GetClassData() const { return &_class_data_; }


void PoliciesGet_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PoliciesGet_Response*>(&to_msg);
  auto& from = static_cast<const PoliciesGet_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.PoliciesGet_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  if (from._internal_has_error()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PoliciesGet_Response::CopyFrom(const PoliciesGet_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.PoliciesGet_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoliciesGet_Response::IsInitialized() const {
  return true;
}

void PoliciesGet_Response::InternalSwap(PoliciesGet_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PoliciesGet_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[19]);
}

// ===================================================================

class NamespacesGet_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<NamespacesGet_Request>()._impl_._has_bits_);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NamespacesGet_Request::NamespacesGet_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.NamespacesGet_Request)
}
NamespacesGet_Request::NamespacesGet_Request(const NamespacesGet_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NamespacesGet_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.NamespacesGet_Request)
}

inline void NamespacesGet_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.policy_){}
  };
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NamespacesGet_Request::~NamespacesGet_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.NamespacesGet_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NamespacesGet_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.policy_.Destroy();
}

void NamespacesGet_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NamespacesGet_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.NamespacesGet_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.policy_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NamespacesGet_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.NamespacesGet_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NamespacesGet_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.NamespacesGet_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string policy = 1;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.NamespacesGet_Request.policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.NamespacesGet_Request)
  return target;
}

size_t NamespacesGet_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.NamespacesGet_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string policy = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NamespacesGet_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NamespacesGet_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NamespacesGet_Request::GetClassData() const { return &_class_data_; }


void NamespacesGet_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NamespacesGet_Request*>(&to_msg);
  auto& from = static_cast<const NamespacesGet_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.NamespacesGet_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_policy()) {
    _this->_internal_set_policy(from._internal_policy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NamespacesGet_Request::CopyFrom(const NamespacesGet_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.NamespacesGet_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamespacesGet_Request::IsInitialized() const {
  return true;
}

void NamespacesGet_Request::InternalSwap(NamespacesGet_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NamespacesGet_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[20]);
}

// ===================================================================

class NamespacesGet_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<NamespacesGet_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NamespacesGet_Response::NamespacesGet_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.policy.NamespacesGet_Response)
}
NamespacesGet_Response::NamespacesGet_Response(const NamespacesGet_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NamespacesGet_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){from._impl_.data_}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.policy.NamespacesGet_Response)
}

inline void NamespacesGet_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){arena}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NamespacesGet_Response::~NamespacesGet_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.policy.NamespacesGet_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NamespacesGet_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
  _impl_.error_.Destroy();
}

void NamespacesGet_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NamespacesGet_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.policy.NamespacesGet_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.error_.ClearNonDefaultToEmpty();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NamespacesGet_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.NamespacesGet_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // repeated string data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.policy.NamespacesGet_Response.data"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NamespacesGet_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.policy.NamespacesGet_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.NamespacesGet_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // repeated string data = 3;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.policy.NamespacesGet_Response.data");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.policy.NamespacesGet_Response)
  return target;
}

size_t NamespacesGet_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.policy.NamespacesGet_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.data_.size());
  for (int i = 0, n = _impl_.data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.data_.Get(i));
  }

  // optional string error = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NamespacesGet_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NamespacesGet_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NamespacesGet_Response::GetClassData() const { return &_class_data_; }


void NamespacesGet_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NamespacesGet_Response*>(&to_msg);
  auto& from = static_cast<const NamespacesGet_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.policy.NamespacesGet_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  if (from._internal_has_error()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NamespacesGet_Response::CopyFrom(const NamespacesGet_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.policy.NamespacesGet_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamespacesGet_Response::IsInitialized() const {
  return true;
}

void NamespacesGet_Response::InternalSwap(NamespacesGet_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NamespacesGet_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_policy_2eproto_getter, &descriptor_table_policy_2eproto_once,
      file_level_metadata_policy_2eproto[21]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace policy
}  // namespace engine
}  // namespace api
}  // namespace wazuh
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::StorePost_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::StorePost_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::StorePost_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::StoreDelete_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::StoreDelete_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::StoreDelete_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::StoreGet_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::StoreGet_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::StoreGet_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::StoreGet_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::StoreGet_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::StoreGet_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetPost_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetPost_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetPost_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetPost_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetPost_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetPost_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetDelete_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetDelete_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetDelete_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetDelete_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetDelete_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetDelete_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetGet_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetGet_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetGet_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetGet_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetGet_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetGet_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetCleanDeleted_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetCleanDeleted_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetCleanDeleted_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::AssetCleanDeleted_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::AssetCleanDeleted_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::AssetCleanDeleted_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::DefaultParentGet_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::DefaultParentGet_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::DefaultParentGet_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::DefaultParentGet_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::DefaultParentGet_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::DefaultParentGet_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::DefaultParentPost_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::DefaultParentPost_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::DefaultParentPost_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::DefaultParentPost_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::DefaultParentPost_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::DefaultParentPost_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::DefaultParentDelete_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::DefaultParentDelete_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::DefaultParentDelete_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::DefaultParentDelete_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::DefaultParentDelete_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::DefaultParentDelete_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::PoliciesGet_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::PoliciesGet_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::PoliciesGet_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::PoliciesGet_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::PoliciesGet_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::PoliciesGet_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::NamespacesGet_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::NamespacesGet_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::NamespacesGet_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::policy::NamespacesGet_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::policy::NamespacesGet_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::policy::NamespacesGet_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
