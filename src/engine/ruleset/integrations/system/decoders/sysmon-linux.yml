name: decoder/sysmon-linux/0

metadata:
  module: sysmon-linux
  dataset: sysmon
  title: sysmon-linux logs
  description: Decoder for sysmon logs. Currently suport all events generate with id 1, 3, 4, 5, 9, 11, 16 and 23
  compatibility: This integration was tested on Ubuntu 22.04 (jammy), with sysmon version Sysmon v1.2.0
  versions:
    - 1.2.x
  author:
    name: Wazuh Inc.
    email: info@wazuh.com
    date: 2023-06-09
  references:
    - https://github.com/Sysinternals/SysmonForLinux
    - https://github.com/OTRF/OSSEM-DD/tree/main/linux/sysmon
    - https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon

parents:
  - decoder/syslog/0

check:
  - process.name: sysmon
  - message: starts_with(<Event)
  # TODO: Once the events arrive tagged, uncommnet following line
  # - event.module=='sysmon-linux'

parse|message:
  - <_sysmon/xml/windows>

# Log level mapping
definitions:
  lvl_map:
    '0': Audit
    '1': Critical
    '2': Error
    '3': Warning
    '4': Information
    '5': Verbose
  idEvent_map:
    '1':
      category:
        - process
      type:
        - start
      action: process_creation
      kind: event
      outcome: success
    '3':
      category:
        - network
      type:
        - start
        - connection
        - protocol
      action: network_connection
      kind: event
      outcome: success
    '4':
      category:
        - service
        - process
      type:
        - change
      action: sysmon_service_state_changed
      kind: state
      outcome: unknown
    '5':
      category:
        - process
      type:
        - end
      action: process_terminated
      kind: event
      outcome: success
    '9':
      category:
        - file
        - process
      type:
        - access
        - info
      action: raw_access_read
      # can be considered a normal event in the operation of the system,
      # although it can also be a sign of malicious behavior.
      kind: alert
      outcome: unknown
    '11':
      category:
        - file
      type:
        - creation
      action: file_created
      kind: event
      outcome: success
    '16':
      category:
        - configuration
      type:
        - change
      action: configuration_chage
      kind: state
      outcome: unknown
    '23':
      category:
        - file
      type:
        - deletion
      action: file_deleted
      kind: event
      outcome: success

normalize:
  - map:
      - event.dataset: sysmon
      - event.module: sysmon-linux
      - wazuh.decoders: array_append(sysmon-linux)

      - log.level: get_key_in($lvl_map, $_sysmon.System.Level.#text)
      - event.start: $_sysmon.System.TimeCreated.@SystemTime
      - host.name: $_sysmon.System.Computer.#text
      - event.kind: event
      - event.code: $_sysmon.System.EventID.#text

      - event: merge_key_in($idEvent_map, $_sysmon.System.EventID.#text)

  #########################################################
  #                   Delete invalid fields
  #########################################################
  - check: string_equal($_sysmon.EventData.ConfigurationFileHash,-)
    map:
      - _sysmon.EventData.ConfigurationFileHash: delete()
  - check: string_equal($_sysmon.EventData.FileVersion,-)
    map:
      - _sysmon.EventData.FileVersion: delete()
  - check: string_equal($_sysmon.EventData.Description,-)
    map:
      - _sysmon.EventData.Description: delete()
  - check: string_equal($_sysmon.EventData.Product,-)
    map:
      - _sysmon.EventData.Product: delete()
  - check: string_equal($_sysmon.EventData.Company,-)
    map:
      - _sysmon.EventData.Company: delete()
  - check: string_equal($_sysmon.EventData.OriginalFileName,-)
    map:
      - _sysmon.EventData.OriginalFileName: delete()
  - check: string_equal($_sysmon.EventData.Hashes,-)
    map:
      - _sysmon.EventData.Hashes: delete()
  - check: string_equal($_sysmon.EventData.User,-)
    map:
      - _sysmon.EventData.User: delete()
  - check: string_equal($_sysmon.EventData.IsExecutable,-)
    map:
      - _sysmon.EventData.IsExecutable: delete()
  - check: string_equal($_sysmon.EventData.Archived,-)
    map:
      - _sysmon.EventData.Archived: delete()
  - check: string_equal($_sysmon.EventData.RuleName,-)
    map:
      - _sysmon.EventData.RuleName: delete()
  - check: string_equal($_sysmon.EventData.SourceHostname,-)
    map:
      - _sysmon.EventData.SourceHostname: delete()
  - check: string_equal($_sysmon.EventData.SourcePortName,-)
    map:
      - _sysmon.EventData.SourcePortName: delete()
  - check: string_equal($_sysmon.EventData.DestinationHostname,-)
    map:
      - _sysmon.EventData.DestinationHostname: delete()
  - check: string_equal($_sysmon.EventData.DestinationPortName,-)
    map:
      - _sysmon.EventData.DestinationPortName: delete()
  - check: string_equal($_sysmon.EventData.ParentImage,-)
    map:
      - _sysmon.EventData.ParentImage: delete()
  - check: string_equal($_sysmon.EventData.ParentCommandLine,-)
    map:
      - _sysmon.EventData.ParentCommandLine: delete()
  - check: string_equal($_sysmon.EventData.ParentUser,-)
    map:
      - _sysmon.EventData.ParentUser: delete()

  - check:
      - event.code: '255'
    map:
      - error.code: '255'

  - map:
      - rule.name: $_sysmon.EventData.RuleName
      - event.provider: $_sysmon.System.Provider.@Name

      # TODO: The hash fields are not implemented in sysmon linux yet
      # ~tmp.hashes: parse_key_value($_sysmon.EventData.Hashes, =, \,, ', ')
      # - related.hash: $~tmp.hashes

  #########################################################
  #                   Process fields
  # Event id 1 == Process creation
  # Event id 5 == Process terminated
  #########################################################
  # TODO: Hashes are not implemented in sysmon linux yet
  # - check: >-
  #    string_equal(event.code, 1)
  #    OR string_equal(event.code, 23)
  #    OR string_equal(event.code, 24)
  #    OR string_equal(event.code, 25)
  #    OR string_equal(event.code, 26)
  #   map:
  #     - process.pe.imphash: rename($~tmp.hashes.imphash) #TODO CHECK
  #     - process.hash: $~tmp.hashes

  - map:
      - process.entity_id: $_sysmon.EventData.ProcessGuid
      # - process.entity_id: $_sysmon.EventData.SourceProcessGuid (Only windows currently)
      # - process.entity_id: $_sysmon.EventData.SourceProcessGUID (Only windows currently)
      - process.executable: $_sysmon.EventData.Image
      # - process.executable: $_sysmon.EventData.SourceImage (Only windows currently)
      # - process.executable: $_sysmon.EventData.Destination (Only windows currently)
      - process.pid: parse_long($_sysmon.EventData.ProcessId)
      # - process.pid: parse_long($_sysmon.EventData.SourceProcessId)  (Only windows currently)
      - process.command_line: $_sysmon.EventData.CommandLine
      - process.working_directory: $_sysmon.EventData.CurrentDirectory
      - process.parent.entity_id: $_sysmon.EventData.ParentProcessGuid
      - process.parent.pid: parse_long($_sysmon.EventData.ParentProcessId)
      - process.parent.executable: $_sysmon.EventData.ParentImage
      - process.parent.command_line: $_sysmon.EventData.ParentCommandLine

  - check: $event.code != '7'
    map:
      - process.pe.original_file_name: $_sysmon.EventData.OriginalFileName
      - process.pe.company: $_sysmon.EventData.Company
      - process.pe.description: $_sysmon.EventData.Description
      - process.pe.file_version: $_sysmon.EventData.FileVersion
      - process.pe.product: $_sysmon.EventData.Product

  - map:
      - _file_data: parse_file($process.executable)
      - process.name: $_file_data.name
      # Link issue:
      - process.args: split($process.command_line, ' ')

  - check:
      - process.parent.executable: exists()
    map:
      - _file_data: parse_file($process.parent.executable)
      - process.parent.name: $_file_data.name
      # Link issue:
      - process.parent.args: split($process.parent.command_line, ' ')

  #########################################################
  #                  Service fields
  # Event id 4 == Sysmon service state changed
  #########################################################
  - check:
      - event.code: '4'
    map:
      - event.action: service_start
      - service.name: sysmon
      - service.state: $_sysmon.EventData.State

  #########################################################
  #               Configuration fields
  # Event id 16 == ServiceConfigurationChange
  #########################################################
  - check:
      - event.code: '16'
    map:
      - event.action: configuration_chage
      - file.path: $_sysmon.EventData.Configuration
      # TODO Store the file hash, unimplemented in sysmon currently ($_sysmon.EventData.ConfigurationFileHash)

  #########################################################
  #                  File fields
  # Event id 11 == FileCreate
  # Event id 23 == FileDelete
  #########################################################
  # Unimplemented in sysmon linux currently
  # - check: >-
  #    string_equal(event.code, 6)
  #    OR string_equal(event.code, 7)
  #    OR string_equal(event.code, 15)
  #  map:
  #        - file.pe.imphash: rename($~tmp.hashes.imphash)  #TODO CHECK
  #        - file.hash: $~tmp.hashes
  - map:
      - file.path: $_sysmon.EventData.TargetFilename
      - file.path: $_sysmon.EventData.Device
      - file.path: $_sysmon.EventData.PipeName
      - file.path: $_sysmon.EventData.ImageLoaded
      - file.code_signature.subject_name: $_sysmon.EventData.Signature
      - file.code_signature.status: $_sysmon.EventData.SignatureStatus

  - check:
      - event.code: '7'
    map:
      - file.pe.original_file_name: $_sysmon.EventData.OriginalFileName
      - file.pe.company: $_sysmon.EventData.Company
      - file.pe.description: $_sysmon.EventData.Description
      - file.pe.file_version: $_sysmon.EventData.FileVersion
      - file.pe.product: $_sysmon.EventData.Product
      - _file_data: parse_file($file.path)
      - file.directory: $_file_data.path
      - file.extension: $_file_data.ext
      - file.name: $_file_data.name

  #########################################################
  #         Network fields
  #########################################################
  - map:
      - network.transport: $_sysmon.EventData.Protocol

  # Unimplemented in sysmon linux currently
  #- check:
  #  - event.code: string_not_equal(22)
  #  map:
  #    - network.protocol: $_sysmon.EventData.DestinationPortName
  #    - network.protocol: $_sysmon.EventData.SourcePortName
  #- check:
  #  - event.code: string_equal(22)
  #  map:
  #    - network.protocol: dns

  - map:
      - source.ip: parse_ip($_sysmon.EventData.SourceIp)
      - source.domain: parse_fqdn($_sysmon.EventData.SourceHostname)
      - source.port: parse_long($_sysmon.EventData.SourcePort)

      - destination.ip: parse_ip($_sysmon.EventData.DestinationIp)
      - destination.domain: parse_fqdn($_sysmon.EventData.DestinationHostname)
      - destination.port: parse_long($_sysmon.EventData.DestinationPort)

      - dns.question.name: $_sysmon.EventData.QueryName

  - check: $_sysmon.EventData.Initiated == 'true'
    map:
      - network.direction: egress
  - check: $_sysmon.EventData.Initiated == 'false'
    map:
      - network.direction: ingress

  - check: $_sysmon.EventData.SourceIsIpv6 == 'true'
    map:
      - network.type: ipv6
  - check: $_sysmon.EventData.SourceIsIpv6 == 'false'
    map:
      - network.type: ipv4

  # TODO Related IPs and DNS result parser ( dns.resolved_ip, related.ip, dns.answers, related.hosts)
  # dns.question, should beextracted from the dns.question.name [www.example.com -> exmple.com]

  #########################################################
  #         User fields
  #########################################################
  - map:
      - user.id: $_sysmon.user.identifier
      - _user_parts: split($_sysmon.EventData.user, \\)
      - user.domain: $_user_parts.0
      - user.name: $_user_parts.1
      - user.name: $_sysmon.EventData.user
      # If the user cannnot be parsed, the user.name should be traslate fron the user.identifier

  #########################################################
  #     Related fields
  #########################################################
  - map:
      - related.user: array_append($user.name)
      - related.ip: array_append($source.ip)
      - related.ip: array_append($destination.ip)
      # - related.ip: array_append($dns.resolved_ip) #TODO
      - related.hosts: array_append($source.domain)
      - related.hosts: array_append($destination.domain)
      # - related.hosts: array_append($dns.answers) #TODO
