---
name: decoder/auditd/0

metadata:
  title: Auditd Decoder
  description: Decoder for Linux auditd logs
  references:
    - https://linux.die.net/man/8/auditd
    - https://docs.elastic.co/en/integrations/auditd
  product.name: auditd
  author:
      name: Wazuh, Inc.
      url: https://wazuh.com
      date: 2023/01/30

definitions:
  TYPE_FIELD: type=<auditd.log.record_type>
  LOG_EPOCH: <~log.epoch>
  LOG_SEQUENCE: <auditd.log.sequence>
  MSG_FIELD: '<~/literal/msg=audit(>$LOG_EPOCH:$LOG_SEQUENCE<~/literal/):>'

parents:
  - decoder/integrations/0

check:
  - event.original: +regex_match/^(?:node=.*)?type=\w+ msg=audit
  #TODO: Once the events arrive tagged, uncomment these lines below and remove the above regex
  # - event.module: auditd
  # - event.dataset: auditd.log

parse:
  logpar:
    # type=TEST_GROUP msg=audit(1610903123.444:555): pid=2940 uid=0 auid=1000 old auid=old_auid_example new auid=new_auid_example old ses=old_ses_example new ses=new_ses_example
    - event.original: >-
        (?node=<~node> )$TYPE_FIELD $MSG_FIELD <~log.msg>
        old auid=<auditd.log.old_auid> new auid=<auditd.log.new_auid>
        old ses=<auditd.log.old_ses> new ses=<auditd.log.new_ses>

    # DOUBLE QUOTED
    # type=TEST_GROUP msg=audit(1610903123.444:555): pid=2940 uid=0 auid=1000 ses=14 msg="op=adding group to /etc/group id=1004 exe='/usr/sbin/groupadd' hostname=ubuntu-bionic addr=127.0.0.1 terminal=pts/2 res=success"
    # node=localhost.localdomain type=SERVICE_START msg=audit(1594053514.709:6): pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg="unit=auditd comm=\"systemd\" exe=\"/usr/lib/systemd/systemd\" hostname=? addr=? terminal=? res=success"
    - event.original: (?node=<~node> )$TYPE_FIELD $MSG_FIELD <~log.msg> msg=<~log.sub_msg/quoted>

    # SIMPLE QUOTED
    # type=USER_CHAUTHTOK msg=audit(1610903123.444:555): pid=2953 uid=0 auid=1000 ses=14 msg='op=PAM:chauthtok acct="charlie" exe="/usr/bin/passwd" hostname=ubuntu-bionic addr=127.0.0.1 terminal=pts/2 res=success'
    - event.original: (?node=<~node> )$TYPE_FIELD $MSG_FIELD <~log.msg> msg=<~log.sub_msg/quoted/'>

    # type=AVC msg=audit(1226874073.147:96): avc:  denied  { getattr } for  pid=2465 comm="httpd" path="/var/www/html/file1" dev=dm-0 ino=284133 scontext=unconfined_u:system_r:httpd_t:s0 tcontext=unconfined_u:object_r:samba_share_t:s0 tclass=file
    - event.original: (?node=<~node> )$TYPE_FIELD $MSG_FIELD <~>for  <~log.msg>

    # type=SYSCALL msg=audit(1234567890.404:1992): arch=c000003e syscall=42 success=no exit=-112 a0=4 a1=5f563c6007a0 a2=10 a3=4 items=0 ppid=1 pid=6969 auid=3238672382 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=3238672382 comm="google_ip_forwa" exe="/usr/bin/python3.7" key="key=net"
    # node=localhost.localdomain type=DAEMON_START msg=audit(1594053514.588:4686): op=start ver=2.8.5 format=raw kernel=3.10.0-1062.9.1.el7.x86_64 auid=4294967295 pid=1643 uid=0 ses=4294967295 subj=system_u:system_r:auditd_t:s0 res=success
    - event.original: (?node=<~node> )$TYPE_FIELD $MSG_FIELD (?tty )<~log.msg>

normalize:
  - check:
      - ~log.msg: exists()
      - ~log.sub_msg: exists()
    map:
      - ~kv_msg: +concat/$~log.msg/ /$~log.sub_msg

  - check:
      - ~log.sub_msg: not_exists()
      - ~log.msg: exists()
    map:
      - ~kv_msg: $~log.msg

  - map:
      - event.kind: event
      - fileset.name: log
      - auditd.log.old_auid: $auditd.log.old_auid
      - auditd.log.old_ses: $auditd.log.old_ses
      - wazuh.decoders: +array_append/auditd

      # TODO: we need a HF that parses a date from epoch in secs
      - timestamp: $~log.epoch
