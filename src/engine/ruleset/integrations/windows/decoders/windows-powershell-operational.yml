name: decoder/windows-powershell-operational/0

metadata:
  module: Windows Powershell/Operational
  title: Decoder for Windows Powershell Operational logs
  description: Decoder for Windows Powershell Operational events
  versions: [Vista, "7", "8", "10", "11", Server 2012, Server 2016, Server 2019, Server 2022]
  compatibility: This decoder was tested on Windows 10, but should work on all versions of Windows Vista onwards.
  author:
    name: Wazuh, Inc.
    date: 2023/10/10
  references:
    - https://learn.microsoft.com/en-us/powershell/scripting/windows-powershell/wmf/whats-new/script-logging?view=powershell-7.3

parents:
  - decoder/windows-event/0

check:
  - windows.System.Channel.#text: Microsoft-Windows-PowerShell/Operational

normalize:
 - map:
   - wazuh.decoders: array_append(windows-powershell-operational)
   - event.kind: event
   - event.dataset: powershell-operational
   - event.category: array_append(process)
   - event.sequence: $windows.EventData.SequenceNumber

  # User fields
   - user.id: $windows.User.identifier
   - _user_parts: split($windows.EventData.User, \\)
   - destination.user.domain: $_user_parts.0
   - destination.user.name: $_user_parts.1
   - related.user: array_append($destination.user.name)
   - _connected_user_parts: split($windows.EventData.ConnectedUser, \\)
   - source.user.domain: $_connected_user_parts.0
   - source.user.name: $_connected_user_parts.1
   - user.name: $source.user.name
   - user.domain: $source.user.domain
   - related.user: array_append($source.user.name)

   # PowerShell fields
   - powershell.sequence: $windows.EventData.MessageNumber
   - powershell.total: $windows.EventData.MessageTotal
   - powershell.id: $windows.EventData.ShellID
   - powershell.engine.version: $windows.EventData.EngineVersion
   - powershell.pipeline_id: $windows.EventData.PipelineID
   - powershell.runspace_id: $windows.EventData.RunspaceID
   - powershell.runspace_id: $windows.EventData.RunspaceId
   - powershell.process.executable_version: $windows.EventData.HostVersion
   - powershell.command.value: $windows.EventData.CommandLine
   - powershell.command.path: $windows.EventData.CommandPath
   - powershell.command.name: $windows.EventData.CommandName
   - powershell.command.type: $windows.EventData.CommandType
   - powershell.file.script_block_id: $windows.EventData.ScriptBlockId
   - powershell.file.script_block_text: $windows.EventData.ScriptBlockText

   # File fields
   - file.path: $windows.EventData.ScriptName
   - _file_data: parse_file($file.path)
   - file.directory: $_file_data.path
   - file.extension: $_file_data.ext
   - file.name: $_file_data.name

  # Process fields
   - process.entity_id: $windows.EventData.HostID
   - process.command_line: $windows.EventData.HostApplication
   - process.title: $windows.EventData.HostName
   - process.executable: $file.path

  # Set message of id
   - message: kvdb_get(windows_powershell_op_id_to_message, $event.code)

 - check: $event.code == '4105'
   map:
    - event.type: array_append(start)

 - check: $event.code == '4106'
   map:
    - event.type: array_append(end)

 - check: $event.code != '4105' AND $event.code != '4106'
   map:
   - event.type: array_append(info)

# windows.logon
 - check: $windows.System.Keywords.#text == '0x0'
   map:
   - windows.logon.keywords: array_append(AnyKeyword)

 - map:
   - windows.logon.activity_id: $windows.System.Task.@ActivityID
   - windows.logon.channel: $windows.System.Channel.#text
   - windows.logon.computer_name: $windows.System.Computer.#text
   - windows.logon.event_id: $windows.System.EventID.#text
   - windows.logon.keywords: kvdb_decode_bitmask(windows_powershell_bitmask_tables, Keywords, $windows.System.Keywords.#text)
   - windows.logon.opcode: kvdb_get(windows_powershell_operational_winmeta_opcodes, $windows.System.Opcode.#text)
   - windows.logon.process.pid: parse_long($windows.System.Execution.@ProcessID)
   - windows.logon.process.thread.id: $windows.System.Execution.@ThreadID
   - windows.logon.provider_guid: $windows.System.Provider.@Guid
   - windows.logon.provider_name: $windows.System.Provider.@Name
   - windows.logon.record_id: $windows.System.EventRecordID.#text
   - windows.logon.task: $windows.System.Task.#text
   - windows.logon.user.identifier: $windows.User.identifier
   - windows.logon.version: $windows.System.Version.#text
