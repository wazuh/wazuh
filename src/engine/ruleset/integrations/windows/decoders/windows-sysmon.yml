name: decoder/windows-sysmon/0

metadata:
  module: Windows Sysmon
  title: Decoder for Windows Sysmon
  description: Decoder for Windows Sysmon events
  versions: [10x, 11x, 12x, 13x, 14x, 15x]
  compatibility: >
    This integration was tested on Windows 10, with sysmon version v15.x but it should support version v10.x onwards
  author:
    name: Wazuh, Inc.
    date: 2023/10/10
  references:
    - https://learn.microsoft.com/es-es/sysinternals/downloads/sysmon

parents:
  - decoder/windows-event/0

definitions:
  idEvent_map:
    '1':
      category:
        - process
      type:
        - start
      message: Process Create
    '2':
      category:
        - file
      type:
        - change
      message: File creation time
    '3':
      category:
        - network
      type:
        - start
        - connection
        - protocol
      message: Network connection detected
    '4':
      category:
        - process
      type:
        - change
      message: Sysmon service state change (cannot be filtered)
    '5':
      category:
        - process
      type:
        - end
      message: Process terminated
    '6':
      category:
        - driver
      type:
        - start
      message: Driver Loaded
    '7':
      category:
        - process
      type:
        - change
      message: Image loaded
    '8':
      category:
        - process
      type:
        - change
      message: CreateRemoteThread detected
    '9':
      category:
        - process
      type:
        - access
      message: RawAccessRead detected
    '10':
      category:
        - process
      type:
        - access
      message: Process accessed
    '11':
      category:
        - file
      type:
        - creation
      message: File created
    '12':
      category:
        - configuration
        - registry
      type:
        - change
      message: Registry object added or deleted
    '13':
      category:
        - configuration
        - registry
      type:
        - change
      message: Registry value set
    '14':
      category:
        - configuration
        - registry
      type:
        - change
      message: Registry object renamed
    '15':
      category:
        - file
      type:
        - access
      message: File stream created
    '16':
      category:
        - configuration
      type:
        - change
      message: Sysmon configuration change (cannot be filtered)
    '17':
      category:
        - file
      type:
        - creation
      message: Named pipe created
    '18':
      category:
        - file
      type:
        - access
      message: Named pipe connected
    '19':
      category:
        - process
      type:
        - creation
      message: WMI filter
    '20':
      category:
        - process
      type:
        - creation
      message: WMI consumer
    '21':
      category:
        - process
      type:
        - access
      message: WMI consumer filter
    '22':
      category:
        - network
      type:
        - connection
        - protocol
        - info
      message: DNS query
    '23':
      category:
        - file
      type:
        - deletion
      message: File Delete archived
    '24':
      type:
        - change
      message: New content in the clipboard
    '25':
      category:
        - process
      type:
        - change
      message: Process image change
    '26':
      category:
        - file
      type:
        - deletion
      message: File Delete logged
    '27':
      category:
        - file
      type:
        - creation
        - denied
      message: File Block Executable
    '28':
      category:
        - file
      type:
        - deletion
        - denied
      message: File Block Shredding
    '255':
      category:
        - process
      type:
        - error
      message: File Executable Detected

check:
  - windows.System.Provider.@Name: Microsoft-Windows-Sysmon

normalize:
 - map:
    - wazuh.decoders: array_append(windows-sysmon)
    - event.dataset: sysmon
    - event.kind: event
    - _event: get_key_in($idEvent_map, $event.code)
    - event.category: $_event.category
    - event.type: $_event.type
    - message: $_event.message

    # Add categorization fields
    - rule.name: $windows.EventData.RuleName
    - event.hash: $windows.EventData.Hash
    - related.hash: split($windows.EventData.Hashes, ',')
    - _hashes_kv: parse_key_value($windows.EventData.Hashes, '=', ',','\'','\\')
    - _hashes.md5: $_hashes_kv.MD5
    - _hashes.sha1: $_hashes_kv.SHA1
    - _hashes.sha256: $_hashes_kv.SHA256



  ## Process fields
    - process.entity_id: $windows.EventData.ProcessGuid
    - process.pid: parse_long($windows.EventData.ProcessId)
    - process.executable: $windows.EventData.Image
    - process.entity_id: $windows.EventData.SourceProcessGuid
    - process.entity_id: $windows.EventData.SourceProcessGUID
    - process.pid: parse_long($windows.EventData.SourceProcessId)
    - process.thread.id: $windows.EventData.SourceThreadId
    - process.executable: $windows.EventData.SourceImage
    - process.executable: $windows.EventData.Destination
    - process.command_line: $windows.EventData.CommandLine
    - process.working_directory: $windows.EventData.CurrentDirectory
    - process.parent.entity_id: $windows.EventData.ParentProcessGuid
    - process.parent.pid: parse_long($windows.EventData.ParentProcessId)
    - process.parent.executable: $windows.EventData.ParentImage
    - process.parent.command_line: $windows.EventData.ParentCommandLine
    - _file_data: parse_file($process.executable)
    - process.name: $_file_data.name
    - _file_data: parse_file($process.parent.executable)
    - process.parent.name: $_file_data.name
    - process.args: split($process.command_line, ' ')
    - process.parent.args: split($process.parent.command_line, ' ')


  ## File fields
    - file.path: $windows.EventData.TargetFilename
    - file.path: $windows.EventData.Device
    - file.name: $windows.EventData.PipeName
    - file.path: $windows.EventData.ImageLoaded
    - file.code_signature.subject_name: $windows.EventData.Signature
    - file.code_signature.status: $windows.EventData.SignatureStatus
    - file.code_signature.signing_id: $windows.EventData.Signed
    - _file_data: parse_file($file.path)
    - file.directory: $_file_data.path
    - file.extension: $_file_data.ext
    - file.name: $_file_data.name

  ## Network, Destination, and Source fields
    - network.transport: $windows.EventData.Protocol
    - network.protocol: $windows.EventData.DestinationPortName
    - network.protocol: $windows.EventData.SourcePortName
    - source.ip: $windows.EventData.SourceIp
    - source.domain: $windows.EventData.SourceHostname
    - source.port: $windows.EventData.SourcePort
    - destination.ip: $windows.EventData.DestinationIp
    - destination.domain: $windows.EventData.DestinationHostname
    - destination.port: $windows.EventData.DestinationPort
    - dns.question.name: $windows.EventData.QueryName

  ## User fields
    - user.id: $windows.System.Security.@UserID
    - _user_parts: split($windows.EventData.User, \\)
    - user.domain: $_user_parts.0
    - user.name: $_user_parts.1

  ## Related fields
    - related.user: array_append($user.name)
    - related.ip: array_append($windows.EventData.NewTargetUserName)

  ## Sysmon fields
    - sysmon.dns.status: $windows.EventData.QueryStatus
    - sysmon.file.archived: $windows.EventData.Archived
    - sysmon.file.is_executable: $windows.EventData.IsExecutable

 - check: $file.code_signature.status == Valid
   map:
     - file.code_signature.valid: True

 - check: $event.code == '255'
   map:
    - error.code: $event.code

 - check: $event.code == '25'
   map:
    - message: $windows.EventData.Type

 - check: string_not_equal($event.code, "7")
   map:
   - process.pe.original_file_name: $windows.EventData.OriginalFileName
   - process.pe.company: $windows.EventData.Company
   - process.pe.description: $windows.EventData.Description
   - process.pe.file_version: $windows.EventData.FileVersion
   - process.pe.product: $windows.EventData.Product

 - check: $event.code == '7'
   map:
    - file.pe.original_file_name: $windows.EventData.OriginalFileName
    - file.pe.company: $windows.EventData.Company
    - file.pe.description: $windows.EventData.Description
    - file.pe.file_version: $windows.EventData.FileVersion
    - file.pe.product: $windows.EventData.Product

  # DNS event
 - check: $event.code == '22'
   map:
    - network.protocol: dns

 - check: $windows.EventData.SignatureStatus == Valid
   map:
    - file.code_signature.valid: True

 - check: $windows.EventData.Initiated == 'true'
   map:
    - network.direction: egress

 - check: $windows.EventData.Initiated == 'false'
   map:
    - network.direction: ingress

 - check: $windows.EventData.SourceIsIpv6 == 'true'
   map:
    - network.type: ipv6

 - check: $windows.EventData.SourceIsIpv6 == 'false'
   map:
    - network.type: ipv4

 - check: $event.code == '1' OR $event.code == '23' OR $event.code == '24' OR $event.code == '25' OR $event.code == '26'
   map:
    - process.hash: $_hashes
    - process.pe.imphash: $_hashes_kv.IMPHASH

 - check: $event.code == '6' OR $event.code == '7' OR $event.code == '15'
   map:
    - file.hash: $_hashes
    - file.pe.imphash: $_hashes_kv.IMPHASH

  ## Registry fields
 - check: $event.code == '12' OR $event.code == '13' OR $event.code == '14'
   map:
    - registry.path: $windows.EventData.TargetObject
    - _registry.array: split($registry.path, \\)
    - registry.hive: $_registry.array.0
    - _registry.array.0: delete()
    - registry.key: join($_registry.array, \\)
    - registry.value: regex_extract($registry.path, ^.*\\\\(.*\)$)

 - check: ($event.code == '12' OR $event.code == '13' OR $event.code == '14') AND starts_with($windows.Event.EventData.Details,QWORD)
   map:
    - registry.data.type: SZ_QWORD
    # This mappping is wrong, strings is an array, not a string
    # - registry.data.strings: regex_extract($windows.EventData.Details, ^QWORD\\s*\\((0x[0-9A-F]+-0x[0-9A-F]+\)\\\))

 - check: ($event.code == '12' OR $event.code == '13' OR $event.code == '14') AND starts_with($windows.EventData.Details,DWORD)
   map:
    - registry.data.type: SZ_DWORD
    - _value: regex_extract($windows.EventData.Details, 'DWORD \\((0x[0-9A-F]{8})\\)')
    # This mappping is wrong, strings is an array, not a string
    # - registry.data.strings: hex_to_number($_value)

 - check:
    - windows.EventData.Details: starts_with('Binary Data')
   map:
    - _is_binary_data: true

 - check:  ($event.code == '12' OR $event.code == '13' OR $event.code == '14') AND $_is_binary_data == true
   map:
    - registry.data.type: REG_BINARY
    - registry.data.strings: $windows.EventData.Details

# Cleanup
 - map:
   - windows: delete()
